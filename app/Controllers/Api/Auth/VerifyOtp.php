<?php

namespace App\Controllers\Api\Auth;
use App\Controllers\Api\ApiBaseController;
use App\Libraries\JWTHelper;
use App\Models\CustomerModel;
use App\Models\OtpRecordModel;
use CodeIgniter\HTTP\RequestInterface;
use CodeIgniter\HTTP\ResponseInterface;
use Moment\Moment;
use Psr\Log\LoggerInterface;

class VerifyOtp extends ApiBaseController
{
    private $otpRecordsModel;
    public function initController(RequestInterface $request, ResponseInterface $response, LoggerInterface $logger)
    {
        parent::initController($request, $response, $logger); // TODO: Change the autogenerated stub

    }

    public function index()
    {

        $this->otpRecordsModel = new OtpRecordModel();

        $mobile_no = $this->request->getPost("mobile_no");
        $code = $this->request->getPost("code");


        $checkCustomer = $this->otpRecordsModel->select(["otp_record.otp_record_id", "customer.customer_id"])
            ->join("customer", "customer.customer_id=otp_record.customer_id")
            ->where("customer.mobile_no", $mobile_no)
            ->where("otp_record.code", $code)
            ->where("otp_record.expires_at > ", (new Moment())->format("Y-m-d H:i:s"))
            ->first();
        if (!$checkCustomer) return $this->response->setStatusCode(401)->setJSON([
            "status"=>401,
            "message"=>"Invalid OTP or mobile_no"
        ]);


        $this->otpRecordsModel->update($checkCustomer["otp_record_id"], ["expires_at"=>"0000-00-00 00:00:00"]);

        $jwt = JWTHelper::encode($checkCustomer, 10000);

        $data = [
            "result_code"=>200,
            "message"=>"Successfully logged in",
            "data"=>[
                "token"=>$jwt,
            ]
        ];
        return $this->response->setJSON($data);
    }
}
